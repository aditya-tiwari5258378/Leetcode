class Solution {
public:
    int longestPalindromeSubseq(string s) {
        int n= s.length();
        int arr[n+1][n+1];
        
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                arr[i][j]=0;
            }
        }
        
        for(int i=0;i<n;i++){
            arr[i][i]=1;
        }
        
        int j=1;
        for(int i=0;i<n-1;i++){
            if(s[i]==s[j]){
                arr[i][j]= 2;
                j++;
            }
            else{
                arr[i][j]= 1;
                j++;
            }
            
        }
        
        
        for(int j=2;j<n;j++){
            int k= j;
            for(int i=0;i<n-j;i++){
                if(s[i]==s[k]){
                    arr[i][k] = 2+ arr[i+1][k-1];
                    k++;
                }
                else{
                    arr[i][k] = max(arr[i][k-1],arr[i+1][k]);
                    k++;
                }
            }
        }
        return arr[0][n-1];
    }
};
